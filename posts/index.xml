<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on My New Hugo Site</title>
    <link>http://XxRa1n.github.io/posts/</link>
    <description>Recent content in Posts on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="http://XxRa1n.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>http://XxRa1n.github.io/posts/cors%E8%B7%A8%E5%9F%9F/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://XxRa1n.github.io/posts/cors%E8%B7%A8%E5%9F%9F/</guid>
      <description>type: page title: &amp;ldquo;CORS&amp;rdquo; author: me&#xA;跨域访问（Cross Origin Resource Sharing） 1.什么是跨域访问问题 HTTP协议规定，浏览器只能访问与当前页面同源的资源，这通常被称为“同源政策”。 相关定义： 源（Origin）：协议+主域+端口； 同源（Same Origin）：协议，域名，端口三者都相同视为同源； 跨域：是指资源的源和文档的源不同。&#xA;2.跨域访问的解决方案 2.1普通的跨域请求 nginx拦截请求，proxy_pass转发，修改http请求头 web后端支持跨域：&#xA;@CrossOrigin注解 配置拦截器，WebMvcConfigurer 2.2携带Cookie的跨域请求 </description>
    </item>
    <item>
      <title></title>
      <link>http://XxRa1n.github.io/posts/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://XxRa1n.github.io/posts/docker/</guid>
      <description>title: &amp;ldquo;Docker 学习笔记&amp;rdquo; date: 2024-01-24 18:00:00 +0800 author: me cover: &amp;ldquo;-/images/example.png&amp;rdquo; tags: - 代码 - web&#xA;Docker 学习笔记 1.Docker Introduction 传统软件-虚拟机-容器 Docker容器直接与操作系统内核交互&#xA;镜像： 镜像(Image)：Docker将应用程序及其所需的依赖、函数库、环境、配置等文件打包在一起，称为镜像。&#xA;容器： 容器(Container)：镜像中的应用程序运行后形成的进程就是容器，只是Docker会给容器进程做隔离，对外不可见。&#xA;DockerHub： DockerHub是Docker公司托管的公共镜像仓库。类似的平台统称Docker registry&#xA;Docker架构: Docker是一个CS架构的程序，由两部分组成：&#xA;server：Docker守护进程，负责处理Docker指令，管理镜像、容器等 client：通过命令或RestAPI向Docker服务器发送指令。可以在本地或远程向Docker服务器发送指令。 client-&amp;gt;server-&amp;gt;registry client向server发送指令，server接收指令向registry请求镜像，并完成容器创建。&#xA;2.Docker安装 去官网查看安装教程&#xA;# 启动Docker systemctl start docker # 关闭Docker systemctl stop docker # 重启Docker systemctl restart docker 国内镜像： 到国内云服务商官方文档查找&#xA;3.Docker基本操作 镜像相关命令：&#xA;镜像名称一般分两部分组成：[repository]:[tag];tag就是版本号，如果tag省略，默认是latest(最新版) docker build # 从本地Dockerfile构建镜像 docker pull # 从Docker Registry拉取镜像 docker images # 查看本地镜像列表 docker rmi # 删除镜像，rmi是remove image的缩写，可以删除一个或多个镜像 docker push # 推送镜像到服务器 docker save -o xxx.</description>
    </item>
    <item>
      <title></title>
      <link>http://XxRa1n.github.io/posts/ink-blog-tool-en/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://XxRa1n.github.io/posts/ink-blog-tool-en/</guid>
      <description>&lt;p&gt;title: &amp;ldquo;An Elegant Static Blog Generator —— InkPaper&amp;rdquo;&#xA;date: 2015-03-01 17:00:00 +0800&#xA;update: 2016-07-11 17:00:00 +0800&#xA;author: me&#xA;cover: &amp;ldquo;-/images/example-en.png&amp;rdquo;&#xA;tags:&#xA;- 设计&#xA;- 写作&#xA;preview: InkPaper is a static blog generator developed in Golang. No dependencies, cross platform, easy to use, fast building times and an elegant theme.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;⚠Note:&lt;/strong&gt; This is a copy of the old version of Ink documentation, only for showing rendering effect, and its content is not up to date. &lt;strong&gt;DO NOT rely on the instructions below to use Ink!&lt;/strong&gt; Please visit &lt;a href=&#34;https://github.com/InkProject/ink/&#34;&gt;our repository&lt;/a&gt; to get the latest documentation.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;InkPaper is a static blog generator developed in Golang. No dependencies, cross platform, easy to use, fast building times and an elegant theme.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;-/images/example-en.png&#34; alt=&#34;InkPaper - An Elegant Static Blog Generator&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;quick-start&#34;&gt;Quick Start&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Download &amp;amp; Extract &lt;a href=&#34;https://github.com/InkProject/ink&#34;&gt;Ink&lt;/a&gt; and run &lt;code&gt;ink preview&lt;/code&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Tip：Linux/macOS, use &lt;code&gt;./ink preview&lt;/code&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Open &lt;code&gt;http://localhost:8000&lt;/code&gt; in your browser to preview&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;features&#34;&gt;Features&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;YAML format configuration&lt;/li&gt;&#xA;&lt;li&gt;Markdown format articles&lt;/li&gt;&#xA;&lt;li&gt;No dependencies, cross platform&lt;/li&gt;&#xA;&lt;li&gt;Super fast build times&lt;/li&gt;&#xA;&lt;li&gt;Continuously improving theme and typography&lt;/li&gt;&#xA;&lt;li&gt;Multiple article authors support&lt;/li&gt;&#xA;&lt;li&gt;Archive and tag generation&lt;/li&gt;&#xA;&lt;li&gt;Real-time preview when saving&lt;/li&gt;&#xA;&lt;li&gt;Offline full-text keyword search&lt;/li&gt;&#xA;&lt;li&gt;$\LaTeX$ style math formula support (MathJax):&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;$$&#xA;\int_{-\infty}^\infty g(x) dx = \frac{1}{2\pi i} \oint_{\gamma} \frac{f(z)}{z-g(x)} dz&#xA;$$&lt;/p&gt;&#xA;&lt;h3 id=&#34;website-configuration&#34;&gt;Website Configuration&lt;/h3&gt;&#xA;&lt;p&gt;Edit &lt;code&gt;config.yml&lt;/code&gt;, use this format:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;site&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Website Title&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;subtitle&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Website Subtitle&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;limit&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Max Article Count Per Page&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;theme&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Website Theme Directory&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;comment&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Comment Plugin Variable (Default is disqus username)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;root&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Website Root Path&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#Optional&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;lang&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Website Language&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#Support en, zh, ru, ja, de, Configurable in theme/lang.yml&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;url&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Website URL&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#For RSS Generating&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;link&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Article Link Scheme&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#Default Is {title}.html，Support {year},{month},{day},{title} Variables&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;authors&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;AuthorID&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Author Name&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;intro&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Author Motto&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;avatar&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Author Avatar Path&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;build&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;output&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Build Output Directory&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#Optional, Default is &amp;#34;public&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;port&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Preview Port&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;copy&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        - &lt;span style=&#34;color:#ae81ff&#34;&gt;Copied Files When Build&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;publish&lt;/span&gt;: |&lt;span style=&#34;color:#e6db74&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        Excuted command when &amp;#39;ink publish&amp;#39; is used&lt;/span&gt;        &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;blog-writing&#34;&gt;Blog Writing&lt;/h3&gt;&#xA;&lt;p&gt;Create a &lt;code&gt;.md&lt;/code&gt; file in the &lt;code&gt;source&lt;/code&gt; directory (Supports subdirectories). Use this format:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://XxRa1n.github.io/posts/ink-blog-tool/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://XxRa1n.github.io/posts/ink-blog-tool/</guid>
      <description>&lt;p&gt;title: &amp;ldquo;简洁的静态博客构建工具 —— 纸小墨（InkPaper）&amp;rdquo;&#xA;date: 2015-03-01 18:00:00 +0800&#xA;update: 2016-07-11 17:00:00 +0800&#xA;author: me&#xA;cover: &amp;ldquo;-/images/example.png&amp;rdquo;&#xA;tags:&#xA;- 设计&#xA;- 写作&#xA;preview: 纸小墨（InkPaper）是一个GO语言编写的开源静态博客构建工具，可以快速搭建博客网站。它无依赖跨平台，配置简单构建快速，注重简洁易用与更优雅的排版。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;⚠注意：&lt;/strong&gt; 这是纸小墨的旧版本文档的副本，仅用于展示渲染效果，内容不具有参考性，&lt;strong&gt;请勿依赖下文的内容使用纸小墨&lt;/strong&gt;！请访问&lt;a href=&#34;https://github.com/InkProject/ink/&#34;&gt;我们的仓库&lt;/a&gt;以获取最新文档。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;纸小墨简介&#34;&gt;纸小墨简介&lt;/h2&gt;&#xA;&lt;p&gt;纸小墨（InkPaper）是一个GO语言编写的开源静态博客构建工具，可以快速搭建博客网站。它无依赖跨平台，配置简单构建快速，注重简洁易用与更优雅的排版。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;-/images/example.png&#34; alt=&#34;纸小墨 - 简洁的静态博客构建工具&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;开始上手&#34;&gt;开始上手&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;下载并解压 &lt;a href=&#34;https://github.com/InkProject/ink/releases&#34;&gt;Ink&lt;/a&gt;，运行命令 &lt;code&gt;ink preview&lt;/code&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;注意：Linux/macOS下，使用 &lt;code&gt;./ink preview&lt;/code&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;使用浏览器访问 &lt;code&gt;http://localhost:8000&lt;/code&gt; 预览。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;特性介绍&#34;&gt;特性介绍&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;YAML格式的配置&lt;/li&gt;&#xA;&lt;li&gt;Markdown格式的文章&lt;/li&gt;&#xA;&lt;li&gt;无依赖跨平台&lt;/li&gt;&#xA;&lt;li&gt;超快的构建速度&lt;/li&gt;&#xA;&lt;li&gt;不断改善的主题与排版&lt;/li&gt;&#xA;&lt;li&gt;多文章作者支持&lt;/li&gt;&#xA;&lt;li&gt;归档与标签自动生成&lt;/li&gt;&#xA;&lt;li&gt;保存时实时预览页面&lt;/li&gt;&#xA;&lt;li&gt;离线的全文关键字搜索&lt;/li&gt;&#xA;&lt;li&gt;$\LaTeX$ 风格的数学公式支持（MathJax）：&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;$$&#xA;\int_{-\infty}^\infty g(x) dx = \frac{1}{2\pi i} \oint_{\gamma} \frac{f(z)}{z-g(x)} dz&#xA;$$&lt;/p&gt;&#xA;&lt;h3 id=&#34;配置网站&#34;&gt;配置网站&lt;/h3&gt;&#xA;&lt;p&gt;编辑&lt;code&gt;config.yml&lt;/code&gt;，使用如下格式：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;site&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;网站标题&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;subtitle&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;网站子标题&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;limit&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;每页可显示的文章数目&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;theme&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;网站主题目录&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;comment&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;评论插件变量(默认为Disqus账户名)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;root&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;网站根路径&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#可选&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;lang&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;网站语言&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#支持en, zh, ru, ja，de, 可在theme/config.yml配置&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;url&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;网站链接&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#用于RSS生成&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;link&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;文章链接形式&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#默认为{title}.html，支持{year},{month},{day},{title}变量&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;authors&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;作者ID&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;作者名称&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;intro&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;作者简介&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;avatar&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;作者头像路径&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;build&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;output&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;构建输出目录&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#可选, 默认为 &amp;#34;public&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;port&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;预览端口&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;copy&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        - &lt;span style=&#34;color:#ae81ff&#34;&gt;构建时将会复制的目录/文件&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;publish&lt;/span&gt;: |&lt;span style=&#34;color:#e6db74&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        ink publish 命令将会执行的脚本&lt;/span&gt;        &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;创建文章&#34;&gt;创建文章&lt;/h3&gt;&#xA;&lt;p&gt;在&lt;code&gt;source&lt;/code&gt;目录中建立任意&lt;code&gt;.md&lt;/code&gt;文件（可置于子文件夹），使用如下格式：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://XxRa1n.github.io/posts/java_concurrent/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://XxRa1n.github.io/posts/java_concurrent/</guid>
      <description>title: &amp;ldquo;Java 并发编程&amp;rdquo; date: 2023-12-17 18:00:00 +0800 author: me cover: &amp;ldquo;-/images/example.png&amp;rdquo; tags: - 代码 - web&#xA;一.创建线程 方法1：&#xA;//创建线程 Thread t = new Thread(){ public void run(){ //do something } } t.setName(&amp;#34;线程名&amp;#34;);//设置线程名 t.start();//启动线程 方法2：&#xA;Runnable runnable = new Runnable(){ public void run(){ //do something } } //创建线程并设置线程名称 Thread t = new Thread(runnable,&amp;#34;线程名&amp;#34;) t.start();//启动线程 使用lambda表达式简化：&#xA;Runnable runnable = () -&amp;gt; { //do something } //创建线程并设置线程名称 Thread t = new Thread(runnable,&amp;#34;线程名&amp;#34;) t.start();//启动线程 方法3：</description>
    </item>
    <item>
      <title></title>
      <link>http://XxRa1n.github.io/posts/jwt/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://XxRa1n.github.io/posts/jwt/</guid>
      <description>title: &amp;ldquo;JWT&amp;rdquo; date: 2023-12-17 18:00:00 +0800 author: me cover: &amp;ldquo;-/images/example.png&amp;rdquo; tags: - 代码 - web&#xA;JSON Web Token 简称JWT&#xA;1.JWT是什么 JWT是一种安全的传输JSON对象的标准&#xA;2.JWT的用途 2.1身份验证 用户登录后，服务器返回一个JWT，客户端存储在本地，后续请求中携带JWT，服务器验证JWT的有效性，确定用户身份。 JWT常在单点登录中做身份验证。&#xA;单点登录：单点登录（SSO）是一种身份验证解决方案，可让用户通过一次性用户身份验证登录多个应用程序和网站。&#xA;2.2传输信息 JWT可以包含需要传输的信息，例如用户ID、角色、权限等。jwt的签名可以验证传输信息是否被修改，从而保证数据的安全性。&#xA;3.JWT的结构 Header：记录类型和加密算法 Payload：记录Json格式的信息 Signature：使用Header和Payload中的信息生成签名 其中Header和Payload使用Base64URL编码明文存储，Signature使用HMAC SHA256加密算法进行签名。 // Signature生成示例代码 var encodedString = base64UrlEncode(header) + &amp;#39;.&amp;#39; + base64UrlEncode(payload); var signature = HMACSHA256(encodedString, &amp;#39;secret&amp;#39;); // TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ 4.工作JWT示例 一个服务器： Token发送由特定服务器完成： 5.JWT与传统Session Session的缺点：&#xA;session存储在服务器内存中，服务器开销大 分布式环境下，session无法共享 基于Cookie进行用户识别，Cookie保存在客户端中，危险性大 Jwt的缺点：&#xA;jwt的payload是明文存储，所以不能存放敏感信息 jwt要放在http header中，比session请求开销大 6.JWT在JAVA中的使用 6.1 原生使用 java-jwt库可实现相关功能。&#xA;6.2 Spring Security集成使用 </description>
    </item>
    <item>
      <title></title>
      <link>http://XxRa1n.github.io/posts/music/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://XxRa1n.github.io/posts/music/</guid>
      <description>type: page title: &amp;ldquo;收藏曲目&amp;rdquo; author: me&#xA;日语 《Kings》歌手：Angela 来源：《K》 《向かい風》歌手：YOHKO 来源：《魔王勇者》 《My Dearest》 歌手：supercell 来源：《罪恶王冠》 《約束の絆》歌手：种田梨沙;茅原实里;山冈百合 来源：《境界的彼方》&#xA;英语 《Another Love》歌手：Tom Odell 《I really want to stay at your house》 歌手：Rosa Walton 来源：《Cyberpunk 2077》 《This Fffire》 歌手：Franz Ferdinand 来源：《Cyberpunk Edgerunner》 《Shots》 歌手：Imagine Dragons&#xA;华语 《一等情事》 歌手：许一鸣 《女孩你为何踮脚尖》 歌手：双笙 《再见》 歌手：邓紫棋</description>
    </item>
    <item>
      <title></title>
      <link>http://XxRa1n.github.io/posts/oj/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://XxRa1n.github.io/posts/oj/</guid>
      <description>title: &amp;ldquo;OJ系统&amp;rdquo; date: 2023-03-01 18:00:00 +0800 update: 2023-07-11 17:00:00 +0800 author: me cover: &amp;ldquo;-/images/example.png&amp;rdquo; tags: - 代码</description>
    </item>
    <item>
      <title></title>
      <link>http://XxRa1n.github.io/posts/springsecurity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://XxRa1n.github.io/posts/springsecurity/</guid>
      <description>title: &amp;ldquo;SpringSecurity 学习笔记&amp;rdquo; date: 2023-12-17 18:00:00 +0800 author: me cover: &amp;ldquo;-/images/example.png&amp;rdquo; tags: - 代码 - web&#xA;来自Spring Security官方文档&#xA;功能介绍 Spring Security的三个功能(特性):&#xA;认证(Authentication) 防范漏洞攻击 与Servlet API和Spring MVC的整合 1.认证 关于密码编码和存储的功能 核心就是引入了DelegatingPasswordEncoder&#xA;2.防范漏洞攻击 2.1 CSRF CSRF(cross-site request forgery)，即跨站请求伪造。 工作原理是诱导用户发送请求，利用用户本地Cookie，通过目标网站的身份认证。 Spring提供两种方式来防止CSRF攻击：&#xA;同步令牌(Synchronizer Token) 在Session cookie上指定SameSite属性 同步令牌： 详见JWT(JSON Web Token)的工作原理 token不存储在cookie中，在每次请求的时候加在http header中。黑客网站伪造的请求无法获取到token，因此无法通过身份验证。&#xA;SameSite： 规定跨站请求中是否发送Cookie，默认是Lax，即在跨站请求中不发送Cookie。不发送Cookie，跨站请求伪造攻击自然没法通过身份认证。&#xA;2.2 HTTPHeader Spring Security 提供了一些功能和配置选项，以便在应用程序中管理和处理 HTTP 头（HTTP headers）&#xA;3.与Servlet API和Spring MVC的整合 Spring Security Crypto模块 Spring Security Data模块 新的并发API </description>
    </item>
    <item>
      <title></title>
      <link>http://XxRa1n.github.io/posts/test/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://XxRa1n.github.io/posts/test/</guid>
      <description>title: &amp;ldquo;Test&amp;rdquo; date: 2023-03-01 18:00:00 +0800 update: 2023-07-11 17:00:00 +0800 author: me cover: &amp;ldquo;-/images/example.png&amp;rdquo; tags: - 设计 - 写作&#xA;测试博客能否正常运行。 测试Github远程仓库能否同步。</description>
    </item>
    <item>
      <title></title>
      <link>http://XxRa1n.github.io/posts/umijs_request/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://XxRa1n.github.io/posts/umijs_request/</guid>
      <description>title: &amp;ldquo;修改UmiJs中的request.ts&amp;rdquo; date: 2024-01-11 18:00:00 +0800 author: me cover: &amp;ldquo;-/images/example.png&amp;rdquo; tags: - 代码 - JavaScript&#xA;解决的问题：前端后端跨域请求问题 后端：使用WebMvcConfigurer重写addCorsMappings方法，配置跨域请求规则 前端：修改request.ts文件中credentials=&amp;ldquo;include&amp;rdquo;&#xA;前端遇到的问题： request.ts是umijs框架中的文件，无法直接修改。&#xA;解决方法1：把request.ts文件复制到前端项目的src目录下，本地引用。 结果：失败，项目打包失败，无法启动。&#xA;解决方法2：使用反射机制修改request.ts文件中的credentials属性。 结果：待续&amp;hellip;</description>
    </item>
    <item>
      <title></title>
      <link>http://XxRa1n.github.io/posts/usermanangement/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://XxRa1n.github.io/posts/usermanangement/</guid>
      <description>title: &amp;ldquo;用户管理系统&amp;rdquo; date: 2023-12-17 18:00:00 +0800 author: me cover: &amp;ldquo;-/images/example.png&amp;rdquo; tags: - 代码 - Java&#xA;用户中心 企业项目流程 需求分析=&amp;gt;设计(概要设计,详细设计)=&amp;gt;技术选型=&amp;gt; 初始化/引入需要的技术=&amp;gt;写Demo=&amp;gt;写代码(实现业务逻辑)=&amp;gt; 测试(单元测试)=&amp;gt;代码提交/代码评审=&amp;gt;部署=&amp;gt;发布&#xA;需求分析 1.登录/注册 2.用户管理(仅管理员可见) 对用户的查询或者修改 3.用户校验&#xA;技术选型 前端:三件套 + React + 组件库Ant Design + Umi开发框架(alibaba) + Ant Design Pro(现成的管理系统) 后端： java+spring+springmvc+mybatis-plus+springboot+mysql 部署：服务器&#xA;计划 1.初始化项目 1.前端初始化 1.初始化项目 2.引入一些组件 3.框架瘦身 2.后端初始化 1.准备环境(MySQL之类的) 2.引入框架(整合框架)&#xA;2.登录/注册 1.前端 2.后端&#xA;3.用户管理(仅管理员可见) 1.前端 2.后端&#xA;前端 1.初始化项目+引入组件 Ant Design Pro 1.yarn 比npm更快的nodejs包管理工具 可以使用npm install -g yarn安装，-g代表global全局安装. 2.下载Ant Design Pro 根据官网的quick start,使用脚手架安装 3.</description>
    </item>
    <item>
      <title></title>
      <link>http://XxRa1n.github.io/posts/%E5%BE%AE%E6%9C%8D%E5%8A%A1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://XxRa1n.github.io/posts/%E5%BE%AE%E6%9C%8D%E5%8A%A1/</guid>
      <description>title: &amp;ldquo;微服务&amp;rdquo; date: 2023-12-17 18:00:00 +0800 author: me cover: &amp;ldquo;-/images/example.png&amp;rdquo; tags: - 代码 - web&#xA;微服务 微服务 eureka注册中心 ribbon负载均衡 nacos注册中心&#xA;1.认识微服务 服务拆分 服务间通讯&#xA;SpringCloud：&#xA;注册中心：Eureka 服务远程调用：Feign(http协议) 配置中心：SpringCloudConfig 服务网关：SpringCloudGateway 服务监控和保护：Hystrix 微服务的原则 单一职责原则：每个服务只负责一个功能，每个服务有一个数据库&#xA;2.微服务的功能实现 2.1 微服务之间的通讯 每个服务都只负责一个功能，有单独的服务器，那么服务之间应该如何通讯？&#xA;2.1.1 微服务之间的通讯：使用Java发送HTTP请求 负责发送HTTP请求的库：RestTemplate&#xA;Demo：&#xA;// 主类中，或者单独配置类中.把RestTemplate注入到IOC容器中 @Bean public RestTemplate restTemplate(){ return new RestTemplate(); } // Service类中 @Autowired private RestTemplate restTemplate; public Order queryOrderById(Long orderId){ Order order = orderMapper.findById(orderId); String url = &amp;#34;http://localhost:8081/user/&amp;#34; + order.getUserId(); // 发送HTTP请求 User user = restTemplate.</description>
    </item>
  </channel>
</rss>
